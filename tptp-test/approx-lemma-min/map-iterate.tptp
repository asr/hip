
include('lists.ax').
include('approx_lemma.ax').
include('map.ax').
include('iterate.ax').
        
% âˆ€ f x . map f (iterate f x) = iterate f (f x)

% Induction hypothesis
fof(map_iterate_property,axiom,
        ![F,X]: app(h,map(F,iterate(F,X))) = app(h,iterate(F,app(F,X)))).

% Induction step
fof(map_iterate_conjecture,axiom,
    a_t1 = approx(h,map(f,iterate(f,a_x)))
  & a_t2 = approx(h,iterate(f,app(f,a_x)))
  & a_t1 != a_t2
  & min_list(a_t1)
  & min_list(a_t2)
).